@using MTGCommanderDeckBuilderMVC.Models

@model List<CardPO>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link rel="stylesheet" type="text/css" href="~/Content/Main.css">
</head>
<body>
    @if (TempData.ContainsKey("Message"))
    {
        <h5>@TempData["Message"]</h5>
    }
    <div class="row text-center">
        <h2>Card List</h2>
    </div>
    <div class="row">
        <div class="col-md-12 text-center chart" style="height:250px">
            <canvas id="manaChart" style="width:100%; height:100%; max-height:300px; max-width:600px; display:inline-block;"></canvas>
        </div>
    </div>
    <div class="scrollbox">
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>
                        @Html.LabelFor(model => Model[0].CardName)
                    </th>
                    <th>
                        @Html.LabelFor(model => Model[0].ManaCost)
                    </th>
                    <th>
                        @Html.LabelFor(model => Model[0].CardType)
                    </th>
                    <th>
                        @Html.LabelFor(model => Model[0].ColorIdentity)
                    </th>
                    <th>
                        @Html.LabelFor(model => Model[0].Abilities)
                    </th>
                    <th>
                        @Html.LabelFor(model => Model[0].CardStats)
                    </th>
                    @if (Session["RoleID"] != null && (int)Session["RoleID"] < 4)
                    {
                        <th>
                            <label>
                                Actions
                            </label>
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count > 0)
                {
                    foreach (CardPO item in Model)
                    {
                        <tr>
                            <td>
                                @item.CardName
                            </td>
                            <td>
                                @item.ManaCost
                            </td>
                            <td>
                                @item.CardType
                            </td>
                            <td>
                                @item.ColorIdentity
                            </td>
                            <td>
                                @item.Abilities
                            </td>
                            <td>
                                @item.CardStats
                            </td>
                            @if (Session["RoleID"] != null && ((int)Session["RoleID"] < 4 && (long)Session["UserID"] == ViewBag.UserID))
                            {
                                <td>
                                    @Html.ActionLink(" Remove Card ", "Delete", "CardsInDecks", new { cardID = item.CardID, deckID = (long)Session["DeckID"] }, new { @class = "btn btn-default btn-sm", @onclick = "return confirmDelete()" })
                                </td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</body>
    <script src="~/Scripts/Chart.js"></script>
    <script>
    var ctx = document.getElementById("manaChart").getContext('2d');
    var manaChart = new Chart(ctx,
    {
        type: 'bar',
        data: {
            labels: ["Cost 0", "Cost 1", "Cost 2", "Cost 3", "Cost 4", "Cost 5", "Cost 6",
                "Cost 7", "Cost 8", "Cost 9", "Cost 10", "Cost 11", "Cost 12", "Cost 13",
                "Cost 14", "Cost 15", "Cost 16"],
            datasets: [{
                label: 'Mana Curve',
                data: [@ViewBag.ManaCurve[0], @ViewBag.ManaCurve[1], @ViewBag.ManaCurve[2],
                    @ViewBag.ManaCurve[3], @ViewBag.ManaCurve[4], @ViewBag.ManaCurve[5],
                    @ViewBag.ManaCurve[6], @ViewBag.ManaCurve[7], @ViewBag.ManaCurve[8],
                    @ViewBag.ManaCurve[9], @ViewBag.ManaCurve[10], @ViewBag.ManaCurve[11],
                    @ViewBag.ManaCurve[12], @ViewBag.ManaCurve[13], @ViewBag.ManaCurve[14],
                    @ViewBag.ManaCurve[15], @ViewBag.ManaCurve[16]],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.3)',
                    'rgba(54, 162, 235, 0.3)',
                    'rgba(255, 206, 86, 0.3)',
                    'rgba(75, 192, 192, 0.3)',
                    'rgba(153, 102, 255, 0.3)',
                    'rgba(255, 159, 64, 0.3)',
                    'rgba(255, 99, 132, 0.3)',
                    'rgba(54, 162, 235, 0.3)',
                    'rgba(255, 206, 86, 0.3)',
                    'rgba(75, 192, 192, 0.3)',
                    'rgba(153, 102, 255, 0.3)',
                    'rgba(255, 159, 64, 0.3)',
                    'rgba(255, 99, 132, 0.3)',
                    'rgba(54, 162, 235, 0.3)',
                    'rgba(255, 206, 86, 0.3)',
                    'rgba(75, 192, 192, 0.3)',
                    'rgba(153, 102, 255, 0.3)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)'
                ],
                borderWidth: 1,
            }]
        },
        options: {
            scales: {
                yAxes: [{
                }]
            },
            responsive: false
        }
    });
    </script>
<script src="~/Scripts/Main.js"></script>